/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.6
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtNetwork.h"

#line 40 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtNetwork/qssl.sip"
#include <qssl.h>
#line 34 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtNetwork/sipQtNetworkQSsl.cpp"


static sipEnumMemberDef enummembers_QSsl[] = {
    {sipName_AnyProtocol, static_cast<int>(QSsl::AnyProtocol), 100},
    {sipName_Der, static_cast<int>(QSsl::Der), 95},
    {sipName_DnsEntry, static_cast<int>(QSsl::DnsEntry), 94},
    {sipName_Dsa, static_cast<int>(QSsl::Dsa), 96},
    {sipName_EmailEntry, static_cast<int>(QSsl::EmailEntry), 94},
    {sipName_Opaque, static_cast<int>(QSsl::Opaque), 96},
    {sipName_Pem, static_cast<int>(QSsl::Pem), 95},
    {sipName_PrivateKey, static_cast<int>(QSsl::PrivateKey), 97},
    {sipName_PublicKey, static_cast<int>(QSsl::PublicKey), 97},
    {sipName_Rsa, static_cast<int>(QSsl::Rsa), 96},
    {sipName_SecureProtocols, static_cast<int>(QSsl::SecureProtocols), 100},
    {sipName_SslOptionDisableCompression, static_cast<int>(QSsl::SslOptionDisableCompression), 98},
    {sipName_SslOptionDisableEmptyFragments, static_cast<int>(QSsl::SslOptionDisableEmptyFragments), 98},
    {sipName_SslOptionDisableLegacyRenegotiation, static_cast<int>(QSsl::SslOptionDisableLegacyRenegotiation), 98},
    {sipName_SslOptionDisableServerNameIndication, static_cast<int>(QSsl::SslOptionDisableServerNameIndication), 98},
    {sipName_SslOptionDisableSessionTickets, static_cast<int>(QSsl::SslOptionDisableSessionTickets), 98},
    {sipName_SslV2, static_cast<int>(QSsl::SslV2), 100},
    {sipName_SslV3, static_cast<int>(QSsl::SslV3), 100},
    {sipName_TlsV1, static_cast<int>(QSsl::TlsV1), 100},
    {sipName_TlsV1SslV3, static_cast<int>(QSsl::TlsV1SslV3), 100},
    {sipName_TlsV1_0, static_cast<int>(QSsl::TlsV1_0), 100},
    {sipName_TlsV1_1, static_cast<int>(QSsl::TlsV1_1), 100},
    {sipName_TlsV1_2, static_cast<int>(QSsl::TlsV1_2), 100},
    {sipName_UnknownProtocol, static_cast<int>(QSsl::UnknownProtocol), 100},
};


pyqt4ClassTypeDef sipTypeDef_QtNetwork_QSsl = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_NAMESPACE,
        sipNameNr_QSsl,
        {0}
    },
    {
        sipNameNr_QSsl,
        {0, 0, 1},
        0, 0,
        24, enummembers_QSsl,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    -1,
    -1,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0
};
