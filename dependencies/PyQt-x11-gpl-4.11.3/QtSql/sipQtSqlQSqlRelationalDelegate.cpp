/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.6
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtSql.h"

#line 31 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtSql/qsqlrelationaldelegate.sip"
#include <qsqlrelationaldelegate.h>
#line 34 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"

#line 34 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 38 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 41 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 127 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 44 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 31 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qabstractitemmodel.sip"
#include <qabstractitemmodel.h>
#line 47 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 1135 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 50 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 31 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 53 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 56 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 59 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 36 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 62 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 65 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 68 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 43 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qitemeditorfactory.sip"
#include <qitemeditorfactory.h>
#line 71 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 74 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 31 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qabstractitemdelegate.sip"
#include <qabstractitemdelegate.h>
#line 77 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 812 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 80 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qabstractitemview.sip"
#include <qabstractitemview.h>
#line 83 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 31 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 86 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qmetaobject.sip"
#include <qmetaobject.h>
#line 89 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 355 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 92 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 338 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 95 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 274 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 98 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 33 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 101 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 37 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 104 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 120 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 107 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 31 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qthread.sip"
#include <qthread.h>
#line 110 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 35 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 113 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"
#line 31 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 116 "/home/saiaravindbv/repos/graphite/dependencies/PyQt-x11-gpl-4.11.3/QtSql/sipQtSqlQSqlRelationalDelegate.cpp"


class sipQSqlRelationalDelegate : public QSqlRelationalDelegate
{
public:
    sipQSqlRelationalDelegate(QObject*);
    virtual ~sipQSqlRelationalDelegate();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const QMetaMethod&);
    void connectNotify(const QMetaMethod&);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    bool event(QEvent*);
    bool helpEvent(QHelpEvent*,QAbstractItemView*,const QStyleOptionViewItem&,const QModelIndex&);
    void destroyEditor(QWidget*,const QModelIndex&) const;
    bool editorEvent(QEvent*,QAbstractItemModel*,const QStyleOptionViewItem&,const QModelIndex&);
    bool eventFilter(QObject*,QEvent*);
    void drawFocus(QPainter*,const QStyleOptionViewItem&,const QRect&) const;
    void drawDisplay(QPainter*,const QStyleOptionViewItem&,const QRect&,const QString&) const;
    void drawDecoration(QPainter*,const QStyleOptionViewItem&,const QRect&,const QPixmap&) const;
    void drawCheck(QPainter*,const QStyleOptionViewItem&,const QRect&,Qt::CheckState) const;
    void updateEditorGeometry(QWidget*,const QStyleOptionViewItem&,const QModelIndex&) const;
    void setEditorData(QWidget*,const QModelIndex&) const;
    QSize sizeHint(const QStyleOptionViewItem&,const QModelIndex&) const;
    void paint(QPainter*,const QStyleOptionViewItem&,const QModelIndex&) const;
    void setModelData(QWidget*,QAbstractItemModel*,const QModelIndex&) const;
    QWidget* createEditor(QWidget*,const QStyleOptionViewItem&,const QModelIndex&) const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQSqlRelationalDelegate(const sipQSqlRelationalDelegate &);
    sipQSqlRelationalDelegate &operator = (const sipQSqlRelationalDelegate &);

    char sipPyMethods[20];
};

sipQSqlRelationalDelegate::sipQSqlRelationalDelegate(QObject*a0): QSqlRelationalDelegate(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQSqlRelationalDelegate::~sipQSqlRelationalDelegate()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQSqlRelationalDelegate::metaObject() const
{
    return sip_QtSql_qt_metaobject(sipPySelf,sipType_QSqlRelationalDelegate);
}

int sipQSqlRelationalDelegate::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QSqlRelationalDelegate::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtSql_qt_metacall(sipPySelf,sipType_QSqlRelationalDelegate,_c,_id,_a);

    return _id;
}

void *sipQSqlRelationalDelegate::qt_metacast(const char *_clname)
{
    return (sip_QtSql_qt_metacast(sipPySelf, sipType_QSqlRelationalDelegate, _clname)) ? this : QSqlRelationalDelegate::qt_metacast(_clname);
}

void sipQSqlRelationalDelegate::disconnectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_24)(sipModuleAPI_QtSql_QtCore->em_virthandlers[24]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQSqlRelationalDelegate::connectNotify(const QMetaMethod& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QMetaMethod&);

    ((sipVH_QtCore_24)(sipModuleAPI_QtSql_QtCore->em_virthandlers[24]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQSqlRelationalDelegate::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtSql_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQSqlRelationalDelegate::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtSql_QtCore->em_virthandlers[25]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQSqlRelationalDelegate::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtSql_QtCore->em_virthandlers[9]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQSqlRelationalDelegate::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QSqlRelationalDelegate::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtSql_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQSqlRelationalDelegate::helpEvent(QHelpEvent*a0,QAbstractItemView*a1,const QStyleOptionViewItem& a2,const QModelIndex& a3)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_helpEvent);

    if (!sipMeth)
        return QSqlRelationalDelegate::helpEvent(a0,a1,a2,a3);

    typedef bool (*sipVH_QtGui_236)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QHelpEvent*,QAbstractItemView*,const QStyleOptionViewItem&,const QModelIndex&);

    return ((sipVH_QtGui_236)(sipModuleAPI_QtSql_QtGui->em_virthandlers[236]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQSqlRelationalDelegate::destroyEditor(QWidget*a0,const QModelIndex& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_destroyEditor);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::destroyEditor(a0,a1);
        return;
    }

    typedef void (*sipVH_QtGui_80)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWidget*,const QModelIndex&);

    ((sipVH_QtGui_80)(sipModuleAPI_QtSql_QtGui->em_virthandlers[80]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQSqlRelationalDelegate::editorEvent(QEvent*a0,QAbstractItemModel*a1,const QStyleOptionViewItem& a2,const QModelIndex& a3)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_editorEvent);

    if (!sipMeth)
        return QSqlRelationalDelegate::editorEvent(a0,a1,a2,a3);

    typedef bool (*sipVH_QtGui_75)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*,QAbstractItemModel*,const QStyleOptionViewItem&,const QModelIndex&);

    return ((sipVH_QtGui_75)(sipModuleAPI_QtSql_QtGui->em_virthandlers[75]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2, a3);
}

bool sipQSqlRelationalDelegate::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QSqlRelationalDelegate::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_18)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_18)(sipModuleAPI_QtSql_QtCore->em_virthandlers[18]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQSqlRelationalDelegate::drawFocus(QPainter*a0,const QStyleOptionViewItem& a1,const QRect& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_drawFocus);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::drawFocus(a0,a1,a2);
        return;
    }

    typedef void (*sipVH_QtGui_167)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionViewItem&,const QRect&);

    ((sipVH_QtGui_167)(sipModuleAPI_QtSql_QtGui->em_virthandlers[167]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQSqlRelationalDelegate::drawDisplay(QPainter*a0,const QStyleOptionViewItem& a1,const QRect& a2,const QString& a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[11]),sipPySelf,NULL,sipName_drawDisplay);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::drawDisplay(a0,a1,a2,a3);
        return;
    }

    typedef void (*sipVH_QtGui_168)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionViewItem&,const QRect&,const QString&);

    ((sipVH_QtGui_168)(sipModuleAPI_QtSql_QtGui->em_virthandlers[168]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQSqlRelationalDelegate::drawDecoration(QPainter*a0,const QStyleOptionViewItem& a1,const QRect& a2,const QPixmap& a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[12]),sipPySelf,NULL,sipName_drawDecoration);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::drawDecoration(a0,a1,a2,a3);
        return;
    }

    typedef void (*sipVH_QtGui_169)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionViewItem&,const QRect&,const QPixmap&);

    ((sipVH_QtGui_169)(sipModuleAPI_QtSql_QtGui->em_virthandlers[169]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQSqlRelationalDelegate::drawCheck(QPainter*a0,const QStyleOptionViewItem& a1,const QRect& a2,Qt::CheckState a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[13]),sipPySelf,NULL,sipName_drawCheck);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::drawCheck(a0,a1,a2,a3);
        return;
    }

    typedef void (*sipVH_QtGui_170)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionViewItem&,const QRect&,Qt::CheckState);

    ((sipVH_QtGui_170)(sipModuleAPI_QtSql_QtGui->em_virthandlers[170]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQSqlRelationalDelegate::updateEditorGeometry(QWidget*a0,const QStyleOptionViewItem& a1,const QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[14]),sipPySelf,NULL,sipName_updateEditorGeometry);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::updateEditorGeometry(a0,a1,a2);
        return;
    }

    typedef void (*sipVH_QtGui_78)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWidget*,const QStyleOptionViewItem&,const QModelIndex&);

    ((sipVH_QtGui_78)(sipModuleAPI_QtSql_QtGui->em_virthandlers[78]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQSqlRelationalDelegate::setEditorData(QWidget*a0,const QModelIndex& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[15]),sipPySelf,NULL,sipName_setEditorData);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::setEditorData(a0,a1);
        return;
    }

    typedef void (*sipVH_QtGui_80)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWidget*,const QModelIndex&);

    ((sipVH_QtGui_80)(sipModuleAPI_QtSql_QtGui->em_virthandlers[80]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

QSize sipQSqlRelationalDelegate::sizeHint(const QStyleOptionViewItem& a0,const QModelIndex& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[16]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return QSqlRelationalDelegate::sizeHint(a0,a1);

    typedef QSize (*sipVH_QtGui_82)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QStyleOptionViewItem&,const QModelIndex&);

    return ((sipVH_QtGui_82)(sipModuleAPI_QtSql_QtGui->em_virthandlers[82]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQSqlRelationalDelegate::paint(QPainter*a0,const QStyleOptionViewItem& a1,const QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[17]),sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::paint(a0,a1,a2);
        return;
    }

    typedef void (*sipVH_QtGui_48)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionViewItem&,const QModelIndex&);

    ((sipVH_QtGui_48)(sipModuleAPI_QtSql_QtGui->em_virthandlers[48]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQSqlRelationalDelegate::setModelData(QWidget*a0,QAbstractItemModel*a1,const QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[18]),sipPySelf,NULL,sipName_setModelData);

    if (!sipMeth)
    {
        QSqlRelationalDelegate::setModelData(a0,a1,a2);
        return;
    }

    typedef void (*sipVH_QtGui_79)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWidget*,QAbstractItemModel*,const QModelIndex&);

    ((sipVH_QtGui_79)(sipModuleAPI_QtSql_QtGui->em_virthandlers[79]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

QWidget* sipQSqlRelationalDelegate::createEditor(QWidget*a0,const QStyleOptionViewItem& a1,const QModelIndex& a2) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[19]),sipPySelf,NULL,sipName_createEditor);

    if (!sipMeth)
        return QSqlRelationalDelegate::createEditor(a0,a1,a2);

    typedef QWidget* (*sipVH_QtGui_81)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWidget*,const QStyleOptionViewItem&,const QModelIndex&);

    return ((sipVH_QtGui_81)(sipModuleAPI_QtSql_QtGui->em_virthandlers[81]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}


PyDoc_STRVAR(doc_QSqlRelationalDelegate_createEditor, "QSqlRelationalDelegate.createEditor(QWidget, QStyleOptionViewItem, QModelIndex) -> QWidget");

extern "C" {static PyObject *meth_QSqlRelationalDelegate_createEditor(PyObject *, PyObject *);}
static PyObject *meth_QSqlRelationalDelegate_createEditor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QWidget* a0;
        const QStyleOptionViewItem* a1;
        const QModelIndex* a2;
        sipWrapper *sipOwner = 0;
        const QSqlRelationalDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJHJ9J9", &sipSelf, sipType_QSqlRelationalDelegate, &sipCpp, sipType_QWidget, &a0, &sipOwner, sipType_QStyleOptionViewItem, &a1, sipType_QModelIndex, &a2))
        {
            QWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QSqlRelationalDelegate::createEditor(a0,*a1,*a2) : sipCpp->createEditor(a0,*a1,*a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QWidget,(PyObject *)sipOwner);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QSqlRelationalDelegate, sipName_createEditor, doc_QSqlRelationalDelegate_createEditor);

    return NULL;
}


PyDoc_STRVAR(doc_QSqlRelationalDelegate_setModelData, "QSqlRelationalDelegate.setModelData(QWidget, QAbstractItemModel, QModelIndex)");

extern "C" {static PyObject *meth_QSqlRelationalDelegate_setModelData(PyObject *, PyObject *);}
static PyObject *meth_QSqlRelationalDelegate_setModelData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QWidget* a0;
        QAbstractItemModel* a1;
        PyObject *a1Keep;
        const QModelIndex* a2;
        const QSqlRelationalDelegate *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8@J8J9", &sipSelf, sipType_QSqlRelationalDelegate, &sipCpp, sipType_QWidget, &a0, &a1Keep, sipType_QAbstractItemModel, &a1, sipType_QModelIndex, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QSqlRelationalDelegate::setModelData(a0,a1,*a2) : sipCpp->setModelData(a0,a1,*a2));
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -2, a1Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QSqlRelationalDelegate, sipName_setModelData, doc_QSqlRelationalDelegate_setModelData);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QSqlRelationalDelegate(void *, const sipTypeDef *);}
static void *cast_QSqlRelationalDelegate(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QSqlRelationalDelegate)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QItemDelegate)->ctd_cast((QItemDelegate *)(QSqlRelationalDelegate *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QSqlRelationalDelegate(void *, int);}
static void release_QSqlRelationalDelegate(void *sipCppV,int)
{
    QSqlRelationalDelegate *sipCpp = reinterpret_cast<QSqlRelationalDelegate *>(sipCppV);

    Py_BEGIN_ALLOW_THREADS

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QSqlRelationalDelegate(sipSimpleWrapper *);}
static void dealloc_QSqlRelationalDelegate(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQSqlRelationalDelegate *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QSqlRelationalDelegate(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QSqlRelationalDelegate(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QSqlRelationalDelegate(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQSqlRelationalDelegate *sipCpp = 0;

    {
        QObject* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QObject, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQSqlRelationalDelegate(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QSqlRelationalDelegate[] = {{256, 1, 1}};


static PyMethodDef methods_QSqlRelationalDelegate[] = {
    {SIP_MLNAME_CAST(sipName_createEditor), meth_QSqlRelationalDelegate_createEditor, METH_VARARGS, SIP_MLDOC_CAST(doc_QSqlRelationalDelegate_createEditor)},
    {SIP_MLNAME_CAST(sipName_setModelData), meth_QSqlRelationalDelegate_setModelData, METH_VARARGS, SIP_MLDOC_CAST(doc_QSqlRelationalDelegate_setModelData)}
};

PyDoc_STRVAR(doc_QSqlRelationalDelegate, "\1QSqlRelationalDelegate(QObject parent=None)");


pyqt4ClassTypeDef sipTypeDef_QtSql_QSqlRelationalDelegate = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QSqlRelationalDelegate,
        {0}
    },
    {
        sipNameNr_QSqlRelationalDelegate,
        {0, 0, 1},
        2, methods_QSqlRelationalDelegate,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QSqlRelationalDelegate,
    -1,
    -1,
    supers_QSqlRelationalDelegate,
    0,
    init_type_QSqlRelationalDelegate,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QSqlRelationalDelegate,
    0,
    0,
    0,
    release_QSqlRelationalDelegate,
    cast_QSqlRelationalDelegate,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QSqlRelationalDelegate::staticMetaObject,
    0,
    0
};
